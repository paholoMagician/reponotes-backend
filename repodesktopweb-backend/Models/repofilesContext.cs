// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace repodesktopweb_backend.Models;

public partial class repofilesContext : DbContext
{
    public repofilesContext(DbContextOptions<repofilesContext> options)
        : base(options)
    {
    }

    public virtual DbSet<File> Files { get; set; }

    public virtual DbSet<Folder> Folders { get; set; }

    public virtual DbSet<Membresia> Membresias { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<File>(entity =>
        {
            entity.ToTable("file");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Fecrea)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fecrea");
            entity.Property(e => e.NameFile)
                .HasMaxLength(150)
                .HasColumnName("nameFile");
            entity.Property(e => e.Password)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("password");
            entity.Property(e => e.Permisos).HasColumnName("permisos");
            entity.Property(e => e.Position)
                .ValueGeneratedOnAdd()
                .HasColumnName("position");
            entity.Property(e => e.Tagdescription)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("tagdescription");
            entity.Property(e => e.Type)
                .HasMaxLength(10)
                .HasColumnName("type");
        });

        modelBuilder.Entity<Folder>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Table_2");

            entity.ToTable("folder");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.ColorFolder)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("colorFolder");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Fecrea)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fecrea");
            entity.Property(e => e.Iduser).HasColumnName("iduser");
            entity.Property(e => e.NameFolder)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("nameFolder");
            entity.Property(e => e.Password)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("password");
            entity.Property(e => e.Permisos).HasColumnName("permisos");
            entity.Property(e => e.PositionFolder)
                .ValueGeneratedOnAdd()
                .HasColumnName("positionFolder");
        });

        modelBuilder.Entity<Membresia>(entity =>
        {
            entity.ToTable("membresias");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Costo)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("costo");
            entity.Property(e => e.Descuento)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("descuento");
            entity.Property(e => e.DuracionDias).HasColumnName("duracionDias");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Fecrea)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fecrea");
            entity.Property(e => e.NombrePaquete)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nombrePaquete");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.ToTable("usuario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Email)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Fecrea)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fecrea");
            entity.Property(e => e.Nombre)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Password)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("password");
            entity.Property(e => e.Rol)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("rol");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}